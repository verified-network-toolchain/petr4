p4 program:
\n
/*
Copyright 2013-present Barefoot Networks, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include <core.p4>
#include <v1model.p4>

header hdr {
    bit<32> a;
    bit<8> b;
    bit<64> c;
}

#include "arith-skeleton.p4"

control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
    action shift()
    { h.h.c = (bit<64>)(h.h.a << h.h.b); sm.egress_spec = 0; }
    table t {
        actions = { shift; }
        const default_action = shift;
    }
    apply { t.apply(); }
}

V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
\n
\n
# header = { bit<32> a; bit<8> b; bit<64> c; }
# In the output C = A << B

packet 0 00000000 00 00000000 00000000
expect 0 00000000 00 00000000 00000000

packet 0 00000001 00 00000000 00000000
expect 0 00000001 00 00000000 00000001

packet 0 00000001 02 00000000 00000000
expect 0 00000001 02 00000000 00000004

packet 0 00000011 10 00000000 00000000
expect 0 00000011 10 00000000 00110000 

packet 0 00000011 14 00000000 00000000
expect 0 00000011 14 00000000 01100000 

packet 0 00000011 1C 00000000 00000000
expect 0 00000011 1C 00000000 10000000

packet 0 FFFFFFFF 01 00000000 00000000
expect 0 FFFFFFFF 01 00000000 FFFFFFFE

packet 0 FFFFFFFF FF 00000000 00000000
expect 0 FFFFFFFF FF 00000000 00000000
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Packet matched the expected packet.
Packet:   port 0 pkt ffffffffff0000000000000000

Packet matched the expected packet.
Packet:   port 0 pkt ffffffff0100000000fffffffe

Packet matched the expected packet.
Packet:   port 0 pkt 000000111c0000000010000000

Packet matched the expected packet.
Packet:   port 0 pkt 00000011140000000001100000

Packet matched the expected packet.
Packet:   port 0 pkt 00000011100000000000110000

Packet matched the expected packet.
Packet:   port 0 pkt 00000001020000000000000004

Packet matched the expected packet.
Packet:   port 0 pkt 00000001000000000000000001

Packet matched the expected packet.
Packet:   port 0 pkt 00000000000000000000000000
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmp5m8w82q2
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmp5m8w82q2/arith3-bmv2.json /petr4/ci-test/testdata/p4_16_samples/arith3-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9923 --device-id 833 -i 0@pcap0 .././tmp5m8w82q2/arith3-bmv2.json
Running simple_switch_CLI --thrift-port 9923
STF Command: packet 0 00000000 00 00000000 00000000
STF Command: expect 0 00000000 00 00000000 00000000
STF Command: packet 0 00000001 00 00000000 00000000
STF Command: expect 0 00000001 00 00000000 00000001
STF Command: packet 0 00000001 02 00000000 00000000
STF Command: expect 0 00000001 02 00000000 00000004
STF Command: packet 0 00000011 10 00000000 00000000
STF Command: expect 0 00000011 10 00000000 00110000
STF Command: packet 0 00000011 14 00000000 00000000
STF Command: expect 0 00000011 14 00000000 01100000
STF Command: packet 0 00000011 1C 00000000 00000000
STF Command: expect 0 00000011 1C 00000000 10000000
STF Command: packet 0 FFFFFFFF 01 00000000 00000000
STF Command: expect 0 FFFFFFFF 01 00000000 FFFFFFFE
STF Command: packet 0 FFFFFFFF FF 00000000 00000000
STF Command: expect 0 FFFFFFFF FF 00000000 00000000
simple_switch exit code -15
Execution completed
Comparing outputs

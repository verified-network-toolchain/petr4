p4 program:
\n
/*
Copyright 2013-present Barefoot Networks, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include <core.p4>
#include <v1model.p4>

header hdr {
    bit<32> a;
    bit<8> b;
    bit<64> c;
}

#include "arith-skeleton.p4"

control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
    action shift()
    { h.h.c = (bit<64>)(h.h.a >> h.h.b); sm.egress_spec = 0; }
    table t {
        actions = { shift; }
        const default_action = shift;
    }
    apply { t.apply(); }
}

V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
\n
\n
# header = { bit<32> a; bit<8> b; bit<64> c; }
# In the output C = A >> B

packet 0 00000000 00 00000000 00000000
expect 0 00000000 00 00000000 00000000

packet 0 00000001 00 00000000 00000000
expect 0 00000001 00 00000000 00000001

packet 0 00000001 02 00000000 00000000
expect 0 00000001 02 00000000 00000000

packet 0 00000011 01 00000000 00000000
expect 0 00000011 01 00000000 00000008

packet 0 00000011 04 00000000 00000000
expect 0 00000011 04 00000000 00000001

packet 0 11111111 10 00000000 00000000
expect 0 11111111 10 00000000 00001111

packet 0 FFFFFFFF 01 00000000 00000000
expect 0 FFFFFFFF 01 00000000 7FFFFFFF

packet 0 FFFFFFFF FF 00000000 00000000
expect 0 FFFFFFFF FF 00000000 00000000
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Packet matched the expected packet.
Packet:   port 0 pkt ffffffffff0000000000000000

Packet matched the expected packet.
Packet:   port 0 pkt ffffffff01000000007fffffff

Packet matched the expected packet.
Packet:   port 0 pkt 11111111100000000000001111

Packet matched the expected packet.
Packet:   port 0 pkt 00000011040000000000000001

Packet matched the expected packet.
Packet:   port 0 pkt 00000011010000000000000008

Packet matched the expected packet.
Packet:   port 0 pkt 00000001020000000000000000

Packet matched the expected packet.
Packet:   port 0 pkt 00000001000000000000000001

Packet matched the expected packet.
Packet:   port 0 pkt 00000000000000000000000000
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmp3c7j9f_8
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmp3c7j9f_8/arith4-bmv2.json /petr4/ci-test/testdata/p4_16_samples/arith4-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9926 --device-id 836 -i 0@pcap0 .././tmp3c7j9f_8/arith4-bmv2.json
Running simple_switch_CLI --thrift-port 9926
STF Command: packet 0 00000000 00 00000000 00000000
STF Command: expect 0 00000000 00 00000000 00000000
STF Command: packet 0 00000001 00 00000000 00000000
STF Command: expect 0 00000001 00 00000000 00000001
STF Command: packet 0 00000001 02 00000000 00000000
STF Command: expect 0 00000001 02 00000000 00000000
STF Command: packet 0 00000011 01 00000000 00000000
STF Command: expect 0 00000011 01 00000000 00000008
STF Command: packet 0 00000011 04 00000000 00000000
STF Command: expect 0 00000011 04 00000000 00000001
STF Command: packet 0 11111111 10 00000000 00000000
STF Command: expect 0 11111111 10 00000000 00001111
STF Command: packet 0 FFFFFFFF 01 00000000 00000000
STF Command: expect 0 FFFFFFFF 01 00000000 7FFFFFFF
STF Command: packet 0 FFFFFFFF FF 00000000 00000000
STF Command: expect 0 FFFFFFFF FF 00000000 00000000
simple_switch exit code -15
Execution completed
Comparing outputs

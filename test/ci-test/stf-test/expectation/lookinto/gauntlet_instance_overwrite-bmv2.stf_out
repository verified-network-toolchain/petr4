p4 program:
\n
#include <core.p4>
#include <v1model.p4>

header H {
    bit<8>  a;
    bit<8>  b;
    bit<8>  c;
}

struct Headers {
    H h;
}

struct Meta {}

parser p(packet_in pkt, out Headers hdr, inout Meta m, inout standard_metadata_t sm) {
    state start {
        transition accept;
    }
}

control ingress(inout Headers h, inout Meta m, inout standard_metadata_t sm) {
    H tmp_1 = { 3, 8w1, 1};
    H tmp_2 = { 8w4, 8w0, 2};
    bit<8> val = 8w3;
    action do_action() {
        sm.ingress_port = 9w0;

    }
    table BfyXpa {
        key = {
            val     : exact @name("eJPEfW") ;
        }
        actions = {
            do_action();
        }
    }
    apply {
        val = tmp_1.a;
        BfyXpa.apply();
    }
}

control vrfy(inout Headers h, inout Meta m) { apply {} }

control update(inout Headers h, inout Meta m) { apply {} }

control egress(inout Headers h, inout Meta m, inout standard_metadata_t sm) { apply {} }

control deparser(packet_out pkt, in Headers h) {
    apply {
        pkt.emit(h);
    }
}
V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;

\n
\n
packet 0 00 00 00
expect 0 00 00 00
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Packet matched the expected packet.
Packet:   port 0 pkt 000000
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmpocfmrs__
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmpocfmrs__/gauntlet_instance_overwrite-bmv2.json /petr4/ci-test/testdata/p4_16_samples/gauntlet_instance_overwrite-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9919 --device-id 829 -i 0@pcap0 .././tmpocfmrs__/gauntlet_instance_overwrite-bmv2.json
Running simple_switch_CLI --thrift-port 9919
STF Command: packet 0 00 00 00
STF Command: expect 0 00 00 00
simple_switch exit code -15
Execution completed
Comparing outputs

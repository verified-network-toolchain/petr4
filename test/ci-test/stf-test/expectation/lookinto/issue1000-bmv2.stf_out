p4 program:
\n
/*
Copyright 2017 Cisco Systems, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
#include <core.p4>
#include <v1model.p4>

header ethernet_t {
    bit<48> dstAddr;
    bit<48> srcAddr;
    bit<16> etherType;
}

struct metadata {
    bit<16> transition_taken;
}

struct headers {
    ethernet_t    ethernet;
}

parser ParserImpl(packet_in packet, out headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
    state start {
        transition parse_ethernet;
    }
    state parse_ethernet {
        packet.extract(hdr.ethernet);
        transition select(hdr.ethernet.dstAddr[47:40],
                          hdr.ethernet.dstAddr[39:32],
                          hdr.ethernet.dstAddr[31:24]) {
            (0xca, 0xfe, 0xad): a7;
            (0xca, 0xfe,    _): a6;
            (0xca,    _, 0xad): a5;
            (   _, 0xfe, 0xad): a3;
            (0xca,    _,    _): a4;
            (   _, 0xfe,    _): a2;
            (   _,    _, 0xad): a1;
            (   _,    _,    _): a0;
        }
    }
    state a0 {
        meta.transition_taken = 0xa0;
        transition accept;
    }
    state a1 {
        meta.transition_taken = 0xa1;
        transition accept;
    }
    state a2 {
        meta.transition_taken = 0xa2;
        transition accept;
    }
    state a3 {
        meta.transition_taken = 0xa3;
        transition accept;
    }
    state a4 {
        meta.transition_taken = 0xa4;
        transition accept;
    }
    state a5 {
        meta.transition_taken = 0xa5;
        transition accept;
    }
    state a6 {
        meta.transition_taken = 0xa6;
        transition accept;
    }
    state a7 {
        meta.transition_taken = 0xa7;
        transition accept;
    }
}

control ingress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
    apply {
        hdr.ethernet.etherType = meta.transition_taken;
    }
}

control egress(inout headers hdr, inout metadata meta, inout standard_metadata_t standard_metadata) {
    apply {
    }
}

control DeparserImpl(packet_out packet, in headers hdr) {
    apply {
        packet.emit(hdr.ethernet);
    }
}

control verifyChecksum(inout headers hdr, inout metadata meta) {
    apply {
    }
}

control computeChecksum(inout headers hdr, inout metadata meta) {
    apply {
    }
}

V1Switch(ParserImpl(), verifyChecksum(), ingress(), egress(), computeChecksum(), DeparserImpl()) main;
\n
\n
packet 0 cafeadffffff 000000000000 0000
expect 0 cafeadffffff 000000000000 00a7

packet 0 cafead000000 000000000000 0000
expect 0 cafead000000 000000000000 00a7

packet 0 cafeaeffffff 000000000000 0000
expect 0 cafeaeffffff 000000000000 00a6

packet 0 cafe51ffffff 000000000000 0000
expect 0 cafe51ffffff 000000000000 00a6

packet 0 ca7eadffffff 000000000000 0000
expect 0 ca7eadffffff 000000000000 00a5

packet 0 ca81adffffff 000000000000 0000
expect 0 ca81adffffff 000000000000 00a5

packet 0 cbfeadffffff 000000000000 0000
expect 0 cbfeadffffff 000000000000 00a3

packet 0 34feadffffff 000000000000 0000
expect 0 34feadffffff 000000000000 00a3

packet 0 cadea5ffffff 000000000000 0000
expect 0 cadea5ffffff 000000000000 00a4

packet 0 ca215affffff 000000000000 0000
expect 0 ca215affffff 000000000000 00a4

packet 0 c2fea3ffffff 000000000000 0000
expect 0 c2fea3ffffff 000000000000 00a2

packet 0 3dfe5cffffff 000000000000 0000
expect 0 3dfe5cffffff 000000000000 00a2

packet 0 c2faadffffff 000000000000 0000
expect 0 c2faadffffff 000000000000 00a1

packet 0 3d05adffffff 000000000000 0000
expect 0 3d05adffffff 000000000000 00a1

packet 0 daf6a9ffffff 000000000000 0000
expect 0 daf6a9ffffff 000000000000 00a0

packet 0 350956ffffff 000000000000 0000
expect 0 350956ffffff 000000000000 00a0
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Packet matched the expected packet.
Packet:   port 0 pkt 350956ffffff00000000000000a0

Packet matched the expected packet.
Packet:   port 0 pkt daf6a9ffffff00000000000000a0

Packet matched the expected packet.
Packet:   port 0 pkt 3d05adffffff00000000000000a1

Packet matched the expected packet.
Packet:   port 0 pkt c2faadffffff00000000000000a1

Packet matched the expected packet.
Packet:   port 0 pkt 3dfe5cffffff00000000000000a2

Packet matched the expected packet.
Packet:   port 0 pkt c2fea3ffffff00000000000000a2

Packet matched the expected packet.
Packet:   port 0 pkt ca215affffff00000000000000a4

Packet matched the expected packet.
Packet:   port 0 pkt cadea5ffffff00000000000000a4

Packet matched the expected packet.
Packet:   port 0 pkt 34feadffffff00000000000000a3

Packet matched the expected packet.
Packet:   port 0 pkt cbfeadffffff00000000000000a3

Packet matched the expected packet.
Packet:   port 0 pkt ca81adffffff00000000000000a5

Packet matched the expected packet.
Packet:   port 0 pkt ca7eadffffff00000000000000a5

Packet matched the expected packet.
Packet:   port 0 pkt cafe51ffffff00000000000000a6

Packet matched the expected packet.
Packet:   port 0 pkt cafeaeffffff00000000000000a6

Packet matched the expected packet.
Packet:   port 0 pkt cafead00000000000000000000a7

Packet matched the expected packet.
Packet:   port 0 pkt cafeadffffff00000000000000a7
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmpn0k3khtu
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmpn0k3khtu/issue1000-bmv2.json /petr4/ci-test/testdata/p4_16_samples/issue1000-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9664 --device-id 574 -i 0@pcap0 .././tmpn0k3khtu/issue1000-bmv2.json
Running simple_switch_CLI --thrift-port 9664
STF Command: packet 0 cafeadffffff 000000000000 0000
STF Command: expect 0 cafeadffffff 000000000000 00a7
STF Command: packet 0 cafead000000 000000000000 0000
STF Command: expect 0 cafead000000 000000000000 00a7
STF Command: packet 0 cafeaeffffff 000000000000 0000
STF Command: expect 0 cafeaeffffff 000000000000 00a6
STF Command: packet 0 cafe51ffffff 000000000000 0000
STF Command: expect 0 cafe51ffffff 000000000000 00a6
STF Command: packet 0 ca7eadffffff 000000000000 0000
STF Command: expect 0 ca7eadffffff 000000000000 00a5
STF Command: packet 0 ca81adffffff 000000000000 0000
STF Command: expect 0 ca81adffffff 000000000000 00a5
STF Command: packet 0 cbfeadffffff 000000000000 0000
STF Command: expect 0 cbfeadffffff 000000000000 00a3
STF Command: packet 0 34feadffffff 000000000000 0000
STF Command: expect 0 34feadffffff 000000000000 00a3
STF Command: packet 0 cadea5ffffff 000000000000 0000
STF Command: expect 0 cadea5ffffff 000000000000 00a4
STF Command: packet 0 ca215affffff 000000000000 0000
STF Command: expect 0 ca215affffff 000000000000 00a4
STF Command: packet 0 c2fea3ffffff 000000000000 0000
STF Command: expect 0 c2fea3ffffff 000000000000 00a2
STF Command: packet 0 3dfe5cffffff 000000000000 0000
STF Command: expect 0 3dfe5cffffff 000000000000 00a2
STF Command: packet 0 c2faadffffff 000000000000 0000
STF Command: expect 0 c2faadffffff 000000000000 00a1
STF Command: packet 0 3d05adffffff 000000000000 0000
STF Command: expect 0 3d05adffffff 000000000000 00a1
STF Command: packet 0 daf6a9ffffff 000000000000 0000
STF Command: expect 0 daf6a9ffffff 000000000000 00a0
STF Command: packet 0 350956ffffff 000000000000 0000
STF Command: expect 0 350956ffffff 000000000000 00a0
simple_switch exit code -15
Execution completed
Comparing outputs

p4 program:
\n
/*
Copyright 2013-present Barefoot Networks, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

#include <core.p4>
#include <v1model.p4>

header hdr {
    bit<8>  e;
    bit<16> t;
    bit<8>  l;
    bit<8> r;
    bit<8>  v;
}

struct Header_t {
    hdr h;
}
struct Meta_t {}

parser p(packet_in b, out Header_t h, inout Meta_t m, inout standard_metadata_t sm) {
    state start {
        b.extract(h.h);
        transition accept;
    }
}

control vrfy(inout Header_t h, inout Meta_t m) { apply {} }
control update(inout Header_t h, inout Meta_t m) { apply {} }
control egress(inout Header_t h, inout Meta_t m, inout standard_metadata_t sm) { apply {} }
control deparser(packet_out b, in Header_t h) { apply { b.emit(h.h); } }

control ingress(inout Header_t h, inout Meta_t m, inout standard_metadata_t standard_meta) {

    action a() { standard_meta.egress_spec = 0; }
    action a_with_control_params(bit<9> x) { standard_meta.egress_spec = x; }

    table t_range {

 	key = {
            h.h.r : range;
        }

        actions = {
            a;
            a_with_control_params;
        }

        default_action = a;

        const entries = {
            1..8 : a_with_control_params(21);
            6..12: a_with_control_params(22);
            15   : a_with_control_params(24);
            _    : a_with_control_params(23);
        }
    }

    apply {
        t_range.apply();
    }
}


V1Switch(p(), vrfy(), ingress(), egress(), update(), deparser()) main;
\n
\n
# header hdr { bit<8>  e; bit<16> t; bit<8>  l; bit<8> r; bit<1>  v; }

#t_range
expect 21 15 **** ** 01 ** $
packet  0 15 0000 00 01 b0

# program order priority
expect 21 15 **** ** 07 ** $
packet  0 15 0000 00 07 b0

expect 22 16 **** ** 0a ** $
packet  0 16 0000 00 0a b0

expect 24 18 **** ** 0f ** $
packet  0 18 0000 00 0f b0

expect 23 17 **** ** 10 ** $
packet  0 17 0000 00 10 b0

expect 23 17 **** ** f0 ** $
packet  0 17 0000 00 f0 b0
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Packet matched the expected packet.
Packet:   port 23 pkt 17000000f0b0

Packet matched the expected packet.
Packet:   port 23 pkt 1700000010b0

Packet matched the expected packet.
Packet:   port 24 pkt 180000000fb0

Packet matched the expected packet.
Packet:   port 22 pkt 160000000ab0

Packet matched the expected packet.
Packet:   port 21 pkt 1500000007b0

Packet matched the expected packet.
Packet:   port 21 pkt 1500000001b0
************************\n******** p4c stf result: ********\n************************\n
Calling target program-options parser
Adding interface pcap0 as port 0 (files)
Adding interface pcap21 as port 21 (files)
Adding interface pcap22 as port 22 (files)
Adding interface pcap23 as port 23 (files)
Adding interface pcap24 as port 24 (files)
Obtaining JSON from switch...
Done
Control utility for runtime P4 table manipulation
RuntimeCmd: 
Writing temporary files into  ./tmpazm9cuut
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmpazm9cuut/table-entries-range-bmv2.json /petr4/ci-test/testdata/p4_16_samples/table-entries-range-bmv2.p4
Exit code  0
Running model
Running simple_switch --log-file switch.log --log-flush --use-files 0 --thrift-port 9189 --device-id 99 -i 0@pcap0 -i 21@pcap21 -i 22@pcap22 -i 23@pcap23 -i 24@pcap24 .././tmpazm9cuut/table-entries-range-bmv2.json
Running simple_switch_CLI --thrift-port 9189
STF Command: expect 21 15 **** ** 01 ** $
STF Command: packet  0 15 0000 00 01 b0
STF Command: expect 21 15 **** ** 07 ** $
STF Command: packet  0 15 0000 00 07 b0
STF Command: expect 22 16 **** ** 0a ** $
STF Command: packet  0 16 0000 00 0a b0
STF Command: expect 24 18 **** ** 0f ** $
STF Command: packet  0 18 0000 00 0f b0
STF Command: expect 23 17 **** ** 10 ** $
STF Command: packet  0 17 0000 00 10 b0
STF Command: expect 23 17 **** ** f0 ** $
STF Command: packet  0 17 0000 00 f0 b0
simple_switch exit code -15
Execution completed
Comparing outputs

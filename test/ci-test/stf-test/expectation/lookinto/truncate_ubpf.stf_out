p4 program:
\n
#include <core.p4>
#define UBPF_MODEL_VERSION 20200515
#include <ubpf_model.p4>

header truncate_spec_t {
    bit<8>  bytes_to_save;
}
header next_header_t {
    bit<32> data;
}

struct Headers_t {
    truncate_spec_t spec;
    next_header_t   data;
}

struct metadata {
}

parser prs(packet_in p, out Headers_t headers, inout metadata meta, inout standard_metadata std_meta) {
    state start {
        p.extract(headers.spec);
        p.extract(headers.data);
        transition accept;
    }
}

control pipe(inout Headers_t headers, inout metadata meta, inout standard_metadata std_meta) {

    apply {
        truncate((bit<32>) headers.spec.bytes_to_save);
        // modify header to be able to check whether it is emitted
        headers.data.data = 32w0xFF_FE_FD_FC;
    }

}

control dprs(packet_out packet, in Headers_t headers) {
    apply {
        packet.emit(headers.data);
    }
}

ubpf(prs(), pipe(), dprs()) main;\n
\n
# packet_in = { bit<8> out_size, bit<32> header, data }
# packet_out = { bit<32> header, data }
# In a output packet header will changed to 0xFF_FE_FD_FC to be able to check whether it is emitted

# truncate after all headers
packet 0 06 01020304 fedc ba98 7654 3210
expect 0 fffefdfc fedc

# truncate after the end of a packet
packet 0 ff 01020304 fedc ba98 7654 3210
expect 0 fffefdfc fedc ba98 7654 3210

# size of truncated packet equal to original
packet 0 06 01020304 fedc
expect 0 fffefdfc fedc
packet 0 07 01020304 fedc
expect 0 fffefdfc fedc

# truncate inside of header, so it wouldn't be emitted
packet 0 02 01020304 fedc ba98 7654 3210
expect 0 0102
\n
\n
************************\n******** petr4 stf result: ********\n************************\n
Uncaught exception:
  
  (Failure "architecture unsupported")

Raised at Stdlib.failwith in file "stdlib.ml", line 29, characters 17-33
Called from Common.Make_parse.do_stf in file "bin/common.ml", line 106, characters 31-65
Called from Core_kernel__Command.For_unix.run.(fun) in file "src/command.ml", line 2453, characters 8-238
Called from Base__Exn.handle_uncaught_aux in file "src/exn.ml", line 111, characters 6-10
************************\n******** p4c stf result: ********\n************************\n
Writing temporary files into  ./tmp_9yn4xz6
Executing  /usr/local/bin//p4c-bm2-ss -o ./tmp_9yn4xz6/truncate_ubpf.json /petr4/ci-test/testdata/p4_16_samples/truncate_ubpf.p4
Exit code  1
Error compiling
/usr/local/share/p4c/p4include/ubpf_model.p4(176): [--Wwarn=invalid] warning: ubpf: the main package should be called V1Switch; are you using the wrong architecture?
package ubpf<H, M>(parse<H, M> prs,
        ^^^^
/petr4/ci-test/testdata/p4_16_samples/truncate_ubpf.p4(44): [--Werror=Target model error] error: package ubpf: main package  match the expected model
Are you using an up-to-date v1model.p4?
ubpf(prs(), pipe(), dprs()) main;
                            ^^^^

*** Test failed
